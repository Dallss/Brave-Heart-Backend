name: Deploy BraveHeart Backend to Cloud Run

on:
  push:
    branches:
      - develop

env:
  PROJECT_ID: brave-heart-463208
  REGION: asia-southeast1
  REPO_NAME: braveheart-backend
  IMAGE_NAME: backend-api

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: develop
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET 9.0 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Authenticate to GCP
        run: |
          echo "${{ secrets.GCP_SERVICE_KEY }}" | base64 -d > key.json
          gcloud auth activate-service-account --key-file=key.json
          gcloud config set project $PROJECT_ID

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker $REGION-docker.pkg.dev

      - name: Build & Push Docker Image
        run: |
          docker build \
            --build-arg ASPNETCORE_ENVIRONMENT=Development \
            -t $REGION-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$IMAGE_NAME:develop .
          docker push $REGION-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$IMAGE_NAME:develop

      - name: Build the project
        run: dotnet build BraveHeartBackend.csproj

      - name: Run EF Core Migrations
        run: |
          dotnet tool install --global dotnet-ef
          export PATH="$PATH:/home/runner/.dotnet/tools"
          dotnet ef database update --project BraveHeartBackend.csproj
        env:
          DB_HOST: ${{ vars.DB_HOST }}
          DB_PORT: ${{ vars.DB_PORT }}
          DB_NAME: ${{ vars.DB_NAME }}
          DB_USER: ${{ vars.DB_USER }}
          DB_PASS: ${{ vars.DB_PASS }}
          DB_SSL_MODE: require
          ASPNETCORE_ENVIRONMENT: Development

      - name: ðŸš€ Deploy to Cloud Run
        run: |
          gcloud run deploy braveheart-backend-develop \
            --image $REGION-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$IMAGE_NAME:develop \
            --region $REGION \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars ASPNETCORE_ENVIRONMENT=Development,DB_HOST=${{ vars.DB_HOST }},DB_PORT=${{ vars.DB_PORT }},DB_NAME=${{ vars.DB_NAME }},DB_USER=${{ vars.DB_USER }},DB_PASS=${{ vars.DB_PASS }},DB_SSL_MODE=${{ vars.DB_SSL_MODE }},JWT_ISSUER=${{ vars.JWT_ISSUER }},JWT_AUDIENCE=${{ vars.JWT_AUDIENCE }},JWT_SECRET_KEY=${{ vars.JWT_SECRET_KEY }},JWT_EXPIRY_MINUTES=${{ vars.JWT_EXPIRY_MINUTES }},CLOUDINARY_CLOUD_NAME=${{ vars.CLOUDINARY_CLOUD_NAME }},CLOUDINARY_API_KEY=${{ vars.CLOUDINARY_API_KEY }},CLOUDINARY_API_SECRET=${{ vars.CLOUDINARY_API_SECRET }},ADMIN_EMAIL=${{ vars.ADMIN_EMAIL }},ADMIN_PASSWORD=${{ vars.ADMIN_PASSWORD }}
