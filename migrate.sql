CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;
CREATE TABLE "AspNetRoles" (
    "Id" text NOT NULL,
    "Name" character varying(256),
    "NormalizedName" character varying(256),
    "ConcurrencyStamp" text,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);

CREATE TABLE "AspNetUsers" (
    "Id" text NOT NULL,
    "RefreshToken" text,
    "RefreshTokenExpiryTime" timestamp with time zone,
    "UserName" character varying(256),
    "NormalizedUserName" character varying(256),
    "Email" character varying(256),
    "NormalizedEmail" character varying(256),
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text,
    "SecurityStamp" text,
    "ConcurrencyStamp" text,
    "PhoneNumber" text,
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL,
    CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id")
);

CREATE TABLE "ProductTypes" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NOT NULL,
    CONSTRAINT "PK_ProductTypes" PRIMARY KEY ("Id")
);

CREATE TABLE "AspNetRoleClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "RoleId" text NOT NULL,
    "ClaimType" text,
    "ClaimValue" text,
    CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);

CREATE TABLE "AspNetUserClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" text NOT NULL,
    "ClaimType" text,
    "ClaimValue" text,
    CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);

CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" character varying(128) NOT NULL,
    "ProviderKey" character varying(128) NOT NULL,
    "ProviderDisplayName" text,
    "UserId" text NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);

CREATE TABLE "AspNetUserRoles" (
    "UserId" text NOT NULL,
    "RoleId" text NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);

CREATE TABLE "AspNetUserTokens" (
    "UserId" text NOT NULL,
    "LoginProvider" character varying(128) NOT NULL,
    "Name" character varying(128) NOT NULL,
    "Value" text,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);

CREATE TABLE "CheckoutDetails" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Email" text NOT NULL,
    "PhoneNumber" text NOT NULL,
    "AddressLine1" text NOT NULL,
    "AddressLine2" text NOT NULL,
    "City" text NOT NULL,
    "State" text NOT NULL,
    "PostalCode" text NOT NULL,
    "Country" text NOT NULL,
    "UserId" text NOT NULL,
    CONSTRAINT "PK_CheckoutDetails" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_CheckoutDetails_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);

CREATE TABLE "ProductAttributes" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NOT NULL,
    "DataType" text NOT NULL,
    "IsRequired" boolean NOT NULL,
    "ProductTypeId" integer NOT NULL,
    CONSTRAINT "PK_ProductAttributes" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ProductAttributes_ProductTypes_ProductTypeId" FOREIGN KEY ("ProductTypeId") REFERENCES "ProductTypes" ("Id") ON DELETE CASCADE
);

CREATE TABLE "Products" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" character varying(200) NOT NULL,
    "Price" numeric NOT NULL,
    "Stock" integer NOT NULL,
    "ProductTypeId" integer NOT NULL,
    "ImageUrl" text,
    CONSTRAINT "PK_Products" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Products_ProductTypes_ProductTypeId" FOREIGN KEY ("ProductTypeId") REFERENCES "ProductTypes" ("Id") ON DELETE CASCADE
);

CREATE TABLE "CartItems" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ProductId" integer NOT NULL,
    "Quantity" integer NOT NULL,
    "UserId" text NOT NULL,
    CONSTRAINT "PK_CartItems" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_CartItems_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_CartItems_Products_ProductId" FOREIGN KEY ("ProductId") REFERENCES "Products" ("Id") ON DELETE CASCADE
);

CREATE TABLE "ProductAttributeValues" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Value" text NOT NULL,
    "ProductId" integer NOT NULL,
    "ProductAttributeId" integer NOT NULL,
    CONSTRAINT "PK_ProductAttributeValues" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ProductAttributeValues_ProductAttributes_ProductAttributeId" FOREIGN KEY ("ProductAttributeId") REFERENCES "ProductAttributes" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ProductAttributeValues_Products_ProductId" FOREIGN KEY ("ProductId") REFERENCES "Products" ("Id") ON DELETE CASCADE
);

INSERT INTO "ProductTypes" ("Id", "Name")
VALUES (1, 'Fire Extinguisher');

INSERT INTO "ProductAttributes" ("Id", "DataType", "IsRequired", "Name", "ProductTypeId")
VALUES (1, 'string', TRUE, 'Color band', 1);
INSERT INTO "ProductAttributes" ("Id", "DataType", "IsRequired", "Name", "ProductTypeId")
VALUES (2, 'string', TRUE, 'Extinguishing agent', 1);
INSERT INTO "ProductAttributes" ("Id", "DataType", "IsRequired", "Name", "ProductTypeId")
VALUES (3, 'string', TRUE, 'Use', 1);

INSERT INTO "Products" ("Id", "ImageUrl", "Name", "Price", "ProductTypeId", "Stock")
VALUES (1, 'https://res.cloudinary.com/braveheartimages/image/upload/v1751823422/dry-chemical_t0rp88.png', 'Dry Chemical (ABC)', 0.0, 1, 0);
INSERT INTO "Products" ("Id", "ImageUrl", "Name", "Price", "ProductTypeId", "Stock")
VALUES (2, 'https://res.cloudinary.com/braveheartimages/image/upload/v1751823357/c02_zlry7d.png', 'Carbon Dioxide (CO₂)', 0.0, 1, 0);
INSERT INTO "Products" ("Id", "ImageUrl", "Name", "Price", "ProductTypeId", "Stock")
VALUES (3, 'https://res.cloudinary.com/braveheartimages/image/upload/v1751823434/foam_ixdviw.png', 'Foam', 0.0, 1, 0);
INSERT INTO "Products" ("Id", "ImageUrl", "Name", "Price", "ProductTypeId", "Stock")
VALUES (4, 'https://res.cloudinary.com/braveheartimages/image/upload/v1751823365/halon_nowrpt.png', 'Halon Substitute', 0.0, 1, 0);

INSERT INTO "ProductAttributeValues" ("Id", "ProductAttributeId", "ProductId", "Value")
VALUES (1, 1, 1, 'White band on a red body');
INSERT INTO "ProductAttributeValues" ("Id", "ProductAttributeId", "ProductId", "Value")
VALUES (2, 2, 1, 'Multipurpose dry chemical');
INSERT INTO "ProductAttributeValues" ("Id", "ProductAttributeId", "ProductId", "Value")
VALUES (3, 3, 1, 'Effective on Class A (solids like wood/paper), B (flammable liquids/gases), and C (electrical) fires');
INSERT INTO "ProductAttributeValues" ("Id", "ProductAttributeId", "ProductId", "Value")
VALUES (4, 1, 2, 'Black band on a red body');
INSERT INTO "ProductAttributeValues" ("Id", "ProductAttributeId", "ProductId", "Value")
VALUES (5, 2, 2, 'Carbon dioxide gas');
INSERT INTO "ProductAttributeValues" ("Id", "ProductAttributeId", "ProductId", "Value")
VALUES (6, 3, 2, 'Ideal for Class B (flammable liquids) and Class C (electrical) fires—leaves no residue, safe for equipment');
INSERT INTO "ProductAttributeValues" ("Id", "ProductAttributeId", "ProductId", "Value")
VALUES (7, 1, 3, 'Blue band on a red body');
INSERT INTO "ProductAttributeValues" ("Id", "ProductAttributeId", "ProductId", "Value")
VALUES (8, 2, 3, 'Aqueous film-forming foam');
INSERT INTO "ProductAttributeValues" ("Id", "ProductAttributeId", "ProductId", "Value")
VALUES (9, 3, 3, 'Suitable for Class A (solids) and B (liquids) fires—forms a foam blanket to suppress vapors');
INSERT INTO "ProductAttributeValues" ("Id", "ProductAttributeId", "ProductId", "Value")
VALUES (10, 1, 4, 'White band on a light green body');
INSERT INTO "ProductAttributeValues" ("Id", "ProductAttributeId", "ProductId", "Value")
VALUES (11, 2, 4, 'Halon-replacement gases (such as FM-200 or similar clean agents)');
INSERT INTO "ProductAttributeValues" ("Id", "ProductAttributeId", "ProductId", "Value")
VALUES (12, 3, 4, 'Designed for Class A, B, and C fires—non-corrosive and leaves minimal residue');

CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");

CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");

CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");

CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");

CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");

CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");

CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");

CREATE INDEX "IX_CartItems_ProductId" ON "CartItems" ("ProductId");

CREATE INDEX "IX_CartItems_UserId" ON "CartItems" ("UserId");

CREATE INDEX "IX_CheckoutDetails_UserId" ON "CheckoutDetails" ("UserId");

CREATE INDEX "IX_ProductAttributes_ProductTypeId" ON "ProductAttributes" ("ProductTypeId");

CREATE INDEX "IX_ProductAttributeValues_ProductAttributeId" ON "ProductAttributeValues" ("ProductAttributeId");

CREATE INDEX "IX_ProductAttributeValues_ProductId" ON "ProductAttributeValues" ("ProductId");

CREATE INDEX "IX_Products_ProductTypeId" ON "Products" ("ProductTypeId");

SELECT setval(
    pg_get_serial_sequence('"ProductTypes"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "ProductTypes") + 1,
        nextval(pg_get_serial_sequence('"ProductTypes"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"ProductAttributes"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "ProductAttributes") + 1,
        nextval(pg_get_serial_sequence('"ProductAttributes"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Products"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Products") + 1,
        nextval(pg_get_serial_sequence('"Products"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"ProductAttributeValues"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "ProductAttributeValues") + 1,
        nextval(pg_get_serial_sequence('"ProductAttributeValues"', 'Id'))),
    false);

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250706203558_InitialClean', '9.0.6');

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250706231928_CascadeDelete_ProductType_Products', '9.0.6');

COMMIT;

